variables:
    IDL_DIR: "idl"

########################################################################################################################
# Basic declarations
.requires-python: &requires-python
    tags:
        - python

.python2-xenial: &python2-xenial
    image: cznic/ubuntu_xenial_python2:latest

.install-dependencies: &install-dependencies
    before_script:
        # Install package dependencies
        - apt-get update && apt-get install -y omniidl-python
        # Get pr-version and update dependency_links
        - git clone git@gitlab.office.nic.cz:pr-utils/pr-version.git --depth 1
        - pervert-requirements.py -r dependency_links.txt
        - cat dependency_links.txt
        # Parse IDL requirements
        - if [ -e pr-version/devel/$CI_BUILD_REF_NAME.conf ]; then IDL_BRANCH=$(python -c "import json;obj=json.loads(open('pr-version/devel/${CI_BUILD_REF_NAME}.conf').read());print obj.get('idl',{}).get('revision', 'master')"); fi
        - git clone git@gitlab.office.nic.cz:fred/idl.git
        - (cd idl && git checkout $IDL_BRANCH && omniidl -bpython -Wbmodules=fred_idl -Wbstubs=fred_idl._stubs idl/*.idl)
        - pip install tox
        - pip install git+https://github.com/balabit/tox-debian-plugin.git

.test: &test
    <<: *requires-python
    <<: *python2-xenial
    <<: *install-dependencies
    script:
        - tox

########################################################################################################################
# Individual jobs
depcheck:
    <<: *requires-python
    <<: *python2-xenial
    only:
        - schedules
    before_script:
        # Install package with testing dependencies to verify versions
        - pip install --process-dependency-links .[testing]
    script:
        - check-constraints.py constraints.txt
    allow_failure: true

test:
    <<: *test

test-thawed:
    <<: *test
    only:
        - schedules
    script:
        - tox -e py27-thaw

conformance:
    <<: *requires-python
    <<: *python2-xenial
    only:
        - schedules
    before_script:
        - apt-get update
        - apt-get install --quiet=2 --yes maven openjdk-8-jdk omniidl-python omniorb-nameserver python-omniorb
        # Prepare RDAP dependencies
        - git clone git@gitlab.office.nic.cz:fred/idl.git
        - (cd idl && omniidl -bpython -Wbmodules=fred_idl -Wbstubs=fred_idl._stubs idl/*.idl)
        - pip install --process-dependency-links .
        # Start fake RDAP backend
        - omniNames -start &
        - python test_cfg/conformance/mock_fred.py &
        # Start RDAP
        - PYTHONPATH="./test_cfg/conformance:$PYTHONPATH" DJANGO_SETTINGS_MODULE='settings' django-admin runserver localhost:8000 &
        # Prepare conformance tests
        - git clone https://github.com/APNIC-net/rdap-conformance.git
        - (cd rdap-conformance && git checkout v0.5)
        - (cd rdap-conformance && mvn package --quiet)
    script:
        - java -jar rdap-conformance/target/rdap-conformance-0.5.jar test_cfg/conformance/rdap_conformance.json
    variables:
        PYTHONPATH: "$IDL_DIR:$PYTHONPATH"
