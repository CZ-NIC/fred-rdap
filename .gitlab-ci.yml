stages:
    - image
    - test
    - build
    - publish

variables:
    DOCKER_REGISTRY: "reg.nic.cz"
    # Set up pip cache shared between all jobs of the project.
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PIP_INDEX_URL:
        value: "https://pypi.nic.cz/cznic/public"
        description: "PyPI index to be used."
    PYTHONWARNINGS: ""

cache:
    paths:
        - .cache/pip

########################################################################################################################
# Docker
.image:
    stage: image
    before_script:
        - docker info
    script:
        # Login to GitLab container registry https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-the-gitlab-container-registry
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker build --pull --build-arg PYTHON_VERSION=$PYTHON_VERSION --tag "$IMAGE_TAG" --file docker/Dockerfile .
        - docker push "$IMAGE_TAG"
    tags:
        - dind
    variables:
        IMAGE_TAG: "$CI_REGISTRY_IMAGE/tox:$PYTHON_VERSION"

image:py37:
    extends: .image
    variables:
        PYTHON_VERSION: "3.7"

image:py38:
    extends: .image
    variables:
        PYTHON_VERSION: "3.8"

image:py39:
    extends: .image
    variables:
        PYTHON_VERSION: "3.9"

image:py310:
    extends: .image
    variables:
        PYTHON_VERSION: "3.10"

image:conformance:
    extends: .image
    script:
        # Login to GitLab container registry https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-the-gitlab-container-registry
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker build --pull --build-arg PIP_INDEX_URL=$PIP_INDEX_URL --tag "$IMAGE_TAG" --file docker/conformance/Dockerfile .
        - docker push "$IMAGE_TAG"
    variables:
        IMAGE_TAG: "$CI_REGISTRY_IMAGE/conformance:latest"

########################################################################################################################
# Basic declarations
.py37: &py37
    image: "$CI_REGISTRY_IMAGE/tox:3.7"

.py38: &py38
    image: "$CI_REGISTRY_IMAGE/tox:3.8"

.py39: &py39
    image: "$CI_REGISTRY_IMAGE/tox:3.9"

.py310: &py310
    image: "$CI_REGISTRY_IMAGE/tox:3.10"

.test: &test
    stage: test
    before_script:
        - echo "Active index - $PIP_INDEX_URL"
    script:
        - tox
    coverage: '/TOTAL(?:\s+\d+){4}\s+(\d+\%)/'
    interruptible: true

########################################################################################################################
# Individual jobs
licensing:
    image: "$DOCKER_REGISTRY/utils/license-check:latest"
    tags:
        - common
    script:
        - license-check -v

test:py37:
    <<: *test
    <<: *py37
    needs: ["image:py37"]

test:py38:
    <<: *test
    <<: *py38
    needs: ["image:py38"]

test:py39:
    <<: *test
    <<: *py39
    needs: ["image:py39"]

test:py310:
    <<: *test
    <<: *py310
    needs: ["image:py310"]

build:
    stage: build
    image: "$DOCKER_REGISTRY/python/upload:latest"
    script:
        - python3 -m build
    artifacts:
        paths:
            - dist
        expire_in: 1h
    needs: []

publish:
    stage: publish
    image: "$DOCKER_REGISTRY/python/upload:latest"
    script:
        - ls dist
        - devpi use "https://pypi.nic.cz/cznic/test"
        - devpi login ciuser --password "$DEVPI_PASSWORD"
        - devpi upload dist/*
    needs: ["build"]
    rules:
        - if: $CI_COMMIT_TAG


conformance:
    services:
        - name: "$CI_REGISTRY_IMAGE/conformance:latest"
          alias: rdap
    image:
        name: "apnic/rdap-conformance:latest"
        entrypoint: [""]
    script:
        # Check server is running. Retry several times until the server replies.
        - curl --retry 10 http://rdap:8000/help
        # Run the conformance test.
        - cd /app
        - /app/entrypoint.sh $CI_PROJECT_DIR/docker/conformance/rdap_conformance.json
    interruptible: true
